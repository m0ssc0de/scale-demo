package main

import (
	"io/ioutil"

	scale "github.com/itering/scale.go"
	"github.com/itering/scale.go/source"
	"github.com/itering/scale.go/types"
	"github.com/itering/scale.go/utiles"
)

func main() {
	process946236()
	process946237()
}

func process946236() {
	// 946236 on Moonbase Alpha
	specNum := 800
	rawEvents := []byte{64, 0, 0, 0, 0, 0, 0, 0, 88, 95, 143, 9, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 17, 6, 0, 64, 149, 38, 214, 190, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 11, 0, 240, 45, 128, 75, 25, 176, 102, 86, 144, 246, 179, 18, 105, 27, 46, 184, 248, 12, 211, 184, 76, 80, 168, 209, 170, 103, 68, 252, 150, 245, 140, 55, 126, 100, 42, 139, 16, 225, 99, 99, 99, 98, 164, 23, 225, 246, 73, 99, 234, 83, 90, 234, 170, 192, 219, 141, 25, 9, 79, 191, 27, 252, 195, 252, 209, 129, 78, 17, 59, 58, 95, 10, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0, 160, 61, 210, 179, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 17, 6, 0, 64, 149, 38, 214, 190, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 11, 0, 95, 220, 242, 33, 233, 135, 150, 107, 41, 103, 20, 149, 63, 182, 149, 42, 252, 36, 174, 254, 163, 117, 186, 123, 70, 22, 99, 187, 63, 16, 110, 11, 245, 166, 162, 242, 118, 170, 126, 145, 217, 103, 139, 153, 173, 247, 144, 246, 99, 202, 17, 148, 175, 200, 50, 0, 38, 153, 14, 84, 177, 73, 175, 155, 27, 69, 165, 19, 79, 20, 216, 237, 0, 1, 0, 0, 4, 0, 0, 0, 0, 0, 160, 61, 210, 179, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 17, 6, 0, 78, 222, 43, 176, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 10, 0, 84, 37, 245, 212, 186, 43, 125, 203, 39, 124, 54, 156, 203, 203, 95, 14, 113, 133, 251, 65, 4, 141, 70, 139, 95, 130, 63, 141, 56, 50, 46, 156, 68, 51, 209, 132, 173, 244, 83, 253, 62, 170, 40, 206, 242, 128, 5, 106, 160, 102, 73, 129, 240, 129, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 135, 246, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 210, 201, 138, 135, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 101, 112, 249, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 84, 101, 116, 104, 101, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 85, 83, 68, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 11, 0, 245, 22, 189, 189, 50, 160, 180, 203, 7, 210, 31, 38, 185, 24, 91, 51, 101, 2, 2, 127, 84, 37, 245, 212, 186, 43, 125, 203, 39, 124, 54, 156, 203, 203, 95, 14, 113, 133, 251, 65, 222, 66, 16, 2, 101, 113, 148, 141, 174, 201, 0, 122, 27, 160, 238, 160, 126, 99, 221, 56, 82, 225, 218, 70, 165, 128, 139, 218, 243, 177, 3, 85, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 208, 1, 207, 49, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 17, 6, 0, 96, 234, 235, 170, 152, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 11, 0, 30, 158, 178, 48, 87, 173, 244, 70, 119, 124, 127, 171, 26, 108, 86, 92, 184, 151, 122, 181, 159, 119, 32, 120, 169, 75, 255, 191, 72, 243, 78, 22, 208, 28, 129, 122, 235, 20, 27, 68, 108, 47, 4, 191, 229, 40, 176, 84, 241, 146, 244, 131, 97, 226, 218, 179, 91, 96, 36, 78, 227, 75, 227, 237, 233, 247, 62, 114, 147, 171, 175, 245, 0, 1, 0, 0, 6, 0, 0, 0, 0, 0, 128, 7, 28, 118, 29, 0, 0, 0, 0, 0, 0}

	networkC, err := ioutil.ReadFile("./moonbeam.json")
	if err != nil {
		panic(err)
	}
	types.RuntimeType{}.Reg()
	types.RegCustomTypes(source.LoadTypeRegistry(networkC))

	metaBodyBytes, err := ioutil.ReadFile("./metaBodyString.946236")
	if err != nil {
		panic(err)
	}
	metaBodyString := string(metaBodyBytes)
	metadataDecoder := scale.MetadataDecoder{}
	metadataDecoder.Init(utiles.HexToBytes(metaBodyString))
	err = metadataDecoder.Process()
	if err != nil {
		panic(err)
	}

	eventDecoder := scale.EventsDecoder{}
	eventDecoderOption := types.ScaleDecoderOption{
		Metadata: &metadataDecoder.Metadata,
		Spec:     specNum,
	}

	eventDecoder.Init(
		types.ScaleBytes{Data: rawEvents},
		&eventDecoderOption,
	)
	eventDecoder.Process()
}

func process946237() {
	// 946237 on Moonbase Alpha
	specNum := 800
	rawEvents := []byte{56, 0, 0, 0, 0, 0, 0, 0, 88, 95, 143, 9, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 29, 3, 128, 128, 119, 140, 48, 194, 15, 162, 235, 192, 237, 24, 210, 203, 202, 31, 24, 41, 109, 156, 64, 55, 73, 166, 89, 221, 13, 247, 205, 128, 68, 67, 118, 99, 134, 183, 0, 160, 114, 78, 24, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 30, 0, 24, 41, 109, 156, 64, 55, 73, 166, 89, 221, 13, 247, 205, 128, 68, 67, 118, 99, 134, 183, 1, 128, 128, 119, 140, 48, 194, 15, 162, 235, 192, 237, 24, 210, 203, 202, 31, 0, 160, 114, 78, 24, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 62, 97, 177, 161, 208, 223, 54, 250, 156, 123, 32, 179, 31, 24, 124, 125, 38, 200, 127, 205, 11, 122, 169, 144, 48, 80, 148, 117, 223, 154, 30, 95, 0, 0, 3, 0, 0, 0, 17, 6, 164, 216, 0, 22, 12, 55, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 101, 205, 29, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 17, 6, 0, 26, 131, 142, 175, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 10, 0, 84, 37, 245, 212, 186, 43, 125, 203, 39, 124, 54, 156, 203, 203, 95, 14, 113, 133, 251, 65, 4, 141, 70, 139, 95, 130, 63, 141, 56, 50, 46, 156, 68, 51, 209, 132, 173, 244, 83, 253, 62, 170, 40, 206, 242, 128, 5, 106, 160, 102, 73, 129, 240, 129, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 167, 240, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 69, 84, 184, 119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 101, 113, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 82, 105, 112, 112, 108, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 88, 82, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 11, 0, 245, 22, 189, 189, 50, 160, 180, 203, 7, 210, 31, 38, 185, 24, 91, 51, 101, 2, 2, 127, 84, 37, 245, 212, 186, 43, 125, 203, 39, 124, 54, 156, 203, 203, 95, 14, 113, 133, 251, 65, 19, 227, 157, 18, 79, 100, 168, 187, 248, 143, 124, 231, 171, 27, 183, 40, 112, 2, 5, 188, 68, 191, 22, 119, 132, 138, 169, 15, 42, 180, 241, 37, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 240, 109, 202, 49, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 17, 6, 0, 202, 171, 41, 229, 174, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 11, 0, 30, 158, 178, 48, 87, 173, 244, 70, 119, 124, 127, 171, 26, 108, 86, 92, 184, 151, 122, 181, 159, 119, 32, 120, 169, 75, 255, 191, 72, 243, 78, 22, 208, 28, 129, 122, 235, 20, 27, 68, 175, 145, 40, 60, 46, 190, 108, 8, 204, 34, 201, 109, 208, 72, 101, 54, 29, 126, 209, 78, 117, 61, 240, 119, 15, 244, 33, 30, 7, 176, 230, 215, 0, 1, 0, 0, 5, 0, 0, 0, 0, 0, 72, 124, 50, 44, 30, 0, 0, 0, 0, 0, 0}

	networkC, err := ioutil.ReadFile("./moonbeam.json")
	if err != nil {
		panic(err)
	}
	types.RuntimeType{}.Reg()
	types.RegCustomTypes(source.LoadTypeRegistry(networkC))

	metaBodyBytes, err := ioutil.ReadFile("./metaBodyString.946237")
	if err != nil {
		panic(err)
	}
	metaBodyString := string(metaBodyBytes)
	metadataDecoder := scale.MetadataDecoder{}
	metadataDecoder.Init(utiles.HexToBytes(metaBodyString))
	err = metadataDecoder.Process()
	if err != nil {
		panic(err)
	}

	eventDecoder := scale.EventsDecoder{}
	eventDecoderOption := types.ScaleDecoderOption{
		Metadata: &metadataDecoder.Metadata,
		Spec:     specNum,
	}

	eventDecoder.Init(
		types.ScaleBytes{Data: rawEvents},
		&eventDecoderOption,
	)
	eventDecoder.Process()
}
